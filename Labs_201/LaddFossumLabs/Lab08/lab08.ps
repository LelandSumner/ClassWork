%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: lab08.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Bold Times-Roman Courier Times-Italic
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -t letter -G0 lab08
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2009.04.07:1354
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 8000 8000 (lab08.dvi)
@start /Fa 139[369 517 3[664 1[959 369 10[664 97[{
TeXBase1Encoding ReEncodeFont}6 1328.35 /Times-Italic
rf /Fb 134[664 664 959 664 739 442 517 590 1[739 664
739 1[369 739 1[369 739 2[590 739 2[664 13[739 13[886
22[332 46[{TeXBase1Encoding ReEncodeFont}21 1328.35 /Times-Bold
rf /Fc 139[531 620 2[886 797 886 2[886 1[443 886 2[708
886 708 1[797 29[1151 11[797 797 797 797 797 797 797
4[399 44[{TeXBase1Encoding ReEncodeFont}21 1594.02 /Times-Bold
rf /Fd 134[677 1[677 677 677 677 677 677 1[677 677 677
677 677 1[677 677 677 1[677 677 677 1[677 677 12[677
677 2[677 3[677 2[677 5[677 1[677 8[677 3[677 677 677
677 677 1[677 46[{.85 ExtendFont TeXBase1Encoding ReEncodeFont}34
1328.35 /Courier rf /Fe 133[590 664 664 959 664 664 369
517 442 664 664 664 664 1033 369 664 1[369 664 664 442
590 664 590 664 590 7[959 1[1254 2[812 3[739 3[812 1[517
442 3[812 959 886 886 959 11[664 1[664 664 664 1[369
332 442 332 2[442 442 442 5[442 30[739 2[{TeXBase1Encoding ReEncodeFont}
50 1328.35 /Times-Roman rf /Ff 105[956 28[956 3[1064
637 744 849 1[1064 956 1064 1593 3[532 1[956 1[849 1064
849 1064 956 13[1064 2[1169 3[1276 2[744 5[1381 1[1381
8[956 956 956 956 956 956 956 956 956 3[478 44[{
TeXBase1Encoding ReEncodeFont}33 1912.83 /Times-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 13701 1328 a Ff(CIS)477 b(201)j(\226)f(Computer)f
(Science)g(I)15533 3764 y(Laboratory)i(Assignment)e(8)0
9487 y(Intr)-34 b(oduction)0 13662 y Fe(In)473 b(this)f(lab)h(you)f
(will)h(redeem)g(yourself)g(by)f(writing)i(programs)f(to)g(implement)h
(and/or)f(test)f(your)h(e)-20 b(xams)0 15267 y(problems.)0
18068 y(Create)447 b(a)f(directory)-86 b(,)477 b Fd(Lab08)449
b Fe(in)e(your)h Fd(CS1)g Fe(directory)-86 b(.)757 b(Y)-146
b(ou)447 b(will)g(be)g(creating)g(Ja)-27 b(v)-33 b(a)447
b(programs)h(in)f(this)g(di-)0 19673 y(rectory)394 b(named)g
Fd(Prob1.java)p Fe(,)414 b Fd(Prob2.java)p Fe(,)f(and)394
b(so)f(forth,)411 b(corresponding)394 b(to)g(the)g(questions)g(on)g
(Exam)0 21278 y(2.)0 27001 y Ff(Pr)-34 b(ob1)0 31176
y Fe(Create)325 b(a)h(program)h(named)f Fd(Prob1.java)k
Fe(with)c(the)g(contents)g(of)g(problem)h(1)f(in)g(your)g(e)-20
b(xam.)410 b(Instead)326 b(of)g(the)0 32782 y(class)331
b(name)i Fd(Temp)p Fe(,)h(use)d(the)i(class)e(name)h
Fd(Prob1)p Fe(.)0 35582 y(Compile)h(and)f(run)h(this)g(program.)413
b(Compare)333 b(the)f(output)h(with)g(what)g(you)f(g)-7
b(a)-27 b(v)-20 b(e)333 b(on)g(your)g(e)-20 b(xam.)0
40713 y Fc(Checkpoint)399 b(1)0 44410 y Fb(Explain)332
b(the)g(output.)0 50133 y Ff(Pr)-34 b(ob2)0 54309 y Fe(Create)325
b(a)h(program)h(named)f Fd(Prob2.java)k Fe(with)c(the)g(contents)g(of)g
(problem)h(2)f(in)g(your)g(e)-20 b(xam.)410 b(Instead)326
b(of)g(the)0 55914 y(class)331 b(name)i Fd(Temp1)p Fe(,)h(use)e(the)g
(class)f(name)i Fd(Prob2)p Fe(.)0 58714 y(Compile)g(and)f(run)h(this)g
(program.)413 b(Compare)333 b(the)f(output)h(with)g(what)g(you)f(g)-7
b(a)-27 b(v)-20 b(e)333 b(on)g(your)g(e)-20 b(xam.)0
63845 y Fc(Checkpoint)399 b(2)0 67542 y Fb(Explain)332
b(the)g(output.)25668 75321 y Fe(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 1328 a Ff(Pr)-34 b(ob3)0 5504
y Fe(Create)462 b(a)h(program)h(named)f Fd(Prob3.java)k
Fe(with)c(class)f(name)g Fd(Prob3)j Fe(and)e(with)g(the)g(prototypes)h
(gi)-33 b(v)-20 b(en)463 b(in)0 7109 y(problem)333 b(3)g(in)f(your)h(e)
-20 b(xam.)412 b(Don')-24 b(t)334 b(w)-13 b(orry)332
b(about)h(cop)-13 b(ying)333 b(the)f(documentation.)0
9910 y(Implement)399 b(the)e Fd(swap)p Fe(,)415 b Fd(randomInt)p
Fe(,)i(and)397 b Fd(shuffle)k Fe(methods,)414 b(using)397
b(what)g(you)h(did)f(for)h(your)g(15-Puzzle)0 11515 y(assignment.)404
b(The)307 b Fd(randomInt)k Fe(and)c Fd(swap)i Fe(methods)f(should)g(be)
f Fa(almost)h Fe(identical)g(to)f(what)h(you)f(were)h(gi)-33
b(v)-20 b(en)0 13120 y(in)435 b(the)g(15-Puzzle)g(assignment,)461
b(e)-20 b(xcept)434 b(that)i(your)f Fd(swap)i Fe(method)e(will)h(use)e
(the)h(formal)h(array)f(parameter)0 14725 y(instead)332
b(of)h(the)f(ArrayList)h(\002eld)f(v)-33 b(ariable.)0
17525 y(Write)419 b(a)g Fd(main)h Fe(method)g(that)f(tests)f(your)i
Fd(shuffle)i Fe(method.)672 b(This)418 b(should)i(look)f(almost)g(the)g
(same)g(as)f(the)0 19130 y Fd(main)350 b Fe(method)f(in)g(your)g
Fd(Shuffle.java)354 b Fe(program)c(for)f(your)g(last)g(assignment.)461
b(Be)348 b(sure)g(that)h(you)g(do)f(more)0 20736 y(than)332
b(one)h(test,)f(with)h(dif)-33 b(ferent)333 b(array)g(sizes)e
(\(including)j(an)e(array)g(of)h(size)f(zero!\).)0 25866
y Fc(Checkpoint)399 b(3)0 29564 y Fb(Explain)332 b(what)g(y)-33
b(ou)332 b(ha)-33 b(v)-13 b(e)331 b(done.)0 35287 y Ff(Pr)-34
b(ob4)0 39462 y Fe(Create)1233 b(a)f(program)i(named)f
Fd(Prob4.java)k Fe(with)d(class)e(name)h Fd(Prob4)p Fe(.)3115
b(Implement)1235 b(the)0 41067 y Fd(intArrayToArrayList)636
b Fe(method)628 b(and)f(write)h(a)f Fd(main)h Fe(method)g(that)g(tests)
f(your)h(method.)1297 b(The)627 b(test)0 42672 y(should)479
b(v)-20 b(erify)480 b(that)f(the)g(sizes)f(of)h(the)g(gi)-33
b(v)-20 b(en)479 b(array)g(and)f(ArrayList)i(are)e(identical)h(and)g
(that)g(the)g(equality)0 44277 y(e)-20 b(xpression)332
b(holds.)0 49408 y Fc(Checkpoint)399 b(4)0 53105 y Fb(Sho)-13
b(w)331 b(us)h(y)-33 b(our)331 b(w)-13 b(ork.)0 58828
y Ff(Pr)-34 b(ob5,)478 b(Pr)-34 b(ob6,)479 b(and)e(Pr)-34
b(ob7)0 63004 y Fe(As)327 b(you)i(ha)-27 b(v)-20 b(e)328
b(done)g(for)g(the)g(pre)-33 b(vious)329 b(problems,)g(create)f
(appropriate)h(Ja)-27 b(v)-33 b(a)327 b(\002les)g(containing)i(the)f
(appropri-)0 64609 y(ate)376 b(class)g(names.)545 b(Implement)378
b(the)f(method)g(described)g(in)g(the)f(e)-20 b(xam)377
b(problem)h(and)e(write)h(a)g Fd(main)h Fe(method)0 66214
y(that)333 b(tests)e(your)i(implementation.)25668 75321
y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 1328 a Fc(Checkpoints)399 b(5,)f(6,)g(and)h(7)0
5026 y Fb(Sho)-13 b(w)331 b(us)h(y)-33 b(our)331 b(w)-13
b(ork.)25668 75321 y Fe(3)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
